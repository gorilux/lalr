lib_lalr_sources = [
  'src/lalr/AddLexerActionHandler.hpp',
  'src/lalr/AddLexerActionHandler.ipp',
  'src/lalr/AddParserActionHandler.hpp',
  'src/lalr/AddParserActionHandler.ipp',
  'src/lalr/assert.hpp',
  'src/lalr/Associativity.hpp',
  'src/lalr/block_comment.hpp',
  'src/lalr/ErrorCode.hpp',
  'src/lalr/ErrorPolicy.cpp',
  'src/lalr/ErrorPolicy.hpp',
  'src/lalr/GrammarAction.cpp',
  'src/lalr/GrammarAction.hpp',
  'src/lalr/GrammarCompiler.cpp',
  'src/lalr/GrammarCompiler.hpp',
  'src/lalr/Grammar.cpp',
  'src/lalr/GrammarGenerator.cpp',
  'src/lalr/GrammarGenerator.hpp',
  'src/lalr/Grammar.hpp',
  'src/lalr/GrammarItem.hpp',
  'src/lalr/GrammarItem.ipp',
  'src/lalr/GrammarLookahead.hpp',
  'src/lalr/GrammarLookahead.ipp',
  'src/lalr/GrammarParser.cpp',
  'src/lalr/GrammarParser.hpp',
  'src/lalr/GrammarProduction.hpp',
  'src/lalr/GrammarProduction.ipp',
  'src/lalr/GrammarProductionLess.hpp',
  'src/lalr/GrammarProductionLess.ipp',
  'src/lalr/GrammarState.cpp',
  'src/lalr/GrammarState.hpp',
  'src/lalr/GrammarStateLess.hpp',
  'src/lalr/GrammarStateLess.ipp',
  'src/lalr/GrammarSymbol.cpp',
  'src/lalr/GrammarSymbol.hpp',
  'src/lalr/GrammarSymbol.ipp',
  'src/lalr/GrammarSymbolSet.cpp',
  'src/lalr/GrammarSymbolSet.hpp',
  'src/lalr/GrammarTransition.cpp',
  'src/lalr/GrammarTransition.hpp',
  'src/lalr/LexemeType.hpp',
  'src/lalr/LexerAction.hpp',
  'src/lalr/Lexer.hpp',
  'src/lalr/Lexer.ipp',
  'src/lalr/LexerState.hpp',
  'src/lalr/LexerStateMachine.hpp',
  'src/lalr/LexerTransition.hpp',
  'src/lalr/line_comment.hpp',
  'src/lalr/ParserAction.hpp',
  'src/lalr/Parser.hpp',
  'src/lalr/Parser.ipp',
  'src/lalr/ParserNode.hpp',
  'src/lalr/ParserNode.ipp',
  'src/lalr/ParserState.hpp',
  'src/lalr/ParserStateMachine.hpp',
  'src/lalr/ParserSymbol.hpp',
  'src/lalr/ParserTransition.hpp',
  'src/lalr/ParserUserData.hpp',
  'src/lalr/ParserUserData.ipp',
  'src/lalr/PositionIterator.hpp',
  'src/lalr/RegexAction.cpp',
  'src/lalr/RegexAction.hpp',
  'src/lalr/RegexCharacter.cpp',
  'src/lalr/RegexCharacter.hpp',
  'src/lalr/RegexCompiler.cpp',
  'src/lalr/RegexCompiler.hpp',
  'src/lalr/RegexGenerator.cpp',
  'src/lalr/RegexGenerator.hpp',
  'src/lalr/RegexItem.cpp',
  'src/lalr/RegexItem.hpp',
  'src/lalr/RegexNode.cpp',
  'src/lalr/RegexNode.hpp',
  'src/lalr/RegexNodeLess.cpp',
  'src/lalr/RegexNodeLess.hpp',
  'src/lalr/RegexNodeType.hpp',
  'src/lalr/RegexParser.cpp',
  'src/lalr/RegexParser.hpp',
  'src/lalr/RegexState.cpp',
  'src/lalr/RegexState.hpp',
  'src/lalr/RegexStateLess.cpp',
  'src/lalr/RegexStateLess.hpp',
  'src/lalr/RegexSyntaxTree.cpp',
  'src/lalr/RegexSyntaxTree.hpp',
  'src/lalr/RegexToken.cpp',
  'src/lalr/RegexToken.hpp',
  'src/lalr/RegexTokenType.hpp',
  'src/lalr/RegexTransition.cpp',
  'src/lalr/RegexTransition.hpp',
  'src/lalr/string_literal.hpp',
  'src/lalr/SymbolType.hpp',
  'src/lalr/ThreadPool.cpp',
  'src/lalr/ThreadPool.hpp',
  'src/lalr/AddLexerActionHandler.hpp',
  'src/lalr/AddLexerActionHandler.ipp',
  'src/lalr/AddParserActionHandler.hpp',
  'src/lalr/AddParserActionHandler.ipp',
  'src/lalr/assert.hpp',
  'src/lalr/Associativity.hpp',
  'src/lalr/block_comment.hpp',
  'src/lalr/ErrorCode.hpp',
  'src/lalr/ErrorPolicy.cpp',
  'src/lalr/ErrorPolicy.hpp',
  'src/lalr/GrammarAction.cpp',
  'src/lalr/GrammarAction.hpp',
  'src/lalr/GrammarCompiler.cpp',
  'src/lalr/GrammarCompiler.hpp',
  'src/lalr/Grammar.cpp',
  'src/lalr/GrammarGenerator.cpp',
  'src/lalr/GrammarGenerator.hpp',
  'src/lalr/Grammar.hpp',
  'src/lalr/GrammarItem.hpp',
  'src/lalr/GrammarItem.ipp',
  'src/lalr/GrammarLookahead.hpp',
  'src/lalr/GrammarLookahead.ipp',
  'src/lalr/GrammarParser.cpp',
  'src/lalr/GrammarParser.hpp',
  'src/lalr/GrammarProduction.hpp',
  'src/lalr/GrammarProduction.ipp',
  'src/lalr/GrammarProductionLess.hpp',
  'src/lalr/GrammarProductionLess.ipp',
  'src/lalr/GrammarState.cpp',
  'src/lalr/GrammarState.hpp',
  'src/lalr/GrammarStateLess.hpp',
  'src/lalr/GrammarStateLess.ipp',
  'src/lalr/GrammarSymbol.cpp',
  'src/lalr/GrammarSymbol.hpp',
  'src/lalr/GrammarSymbol.ipp',
  'src/lalr/GrammarSymbolSet.cpp',
  'src/lalr/GrammarSymbolSet.hpp',
  'src/lalr/GrammarTransition.cpp',
  'src/lalr/GrammarTransition.hpp',
  'src/lalr/LexemeType.hpp',
  'src/lalr/LexerAction.hpp',
  'src/lalr/Lexer.hpp',
  'src/lalr/Lexer.ipp',
  'src/lalr/LexerState.hpp',
  'src/lalr/LexerStateMachine.hpp',
  'src/lalr/LexerTransition.hpp',
  'src/lalr/line_comment.hpp',
  'src/lalr/ParserAction.hpp',
  'src/lalr/Parser.hpp',
  'src/lalr/Parser.ipp',
  'src/lalr/ParserNode.hpp',
  'src/lalr/ParserNode.ipp',
  'src/lalr/ParserState.hpp',
  'src/lalr/ParserStateMachine.hpp',
  'src/lalr/ParserSymbol.hpp',
  'src/lalr/ParserTransition.hpp',
  'src/lalr/ParserUserData.hpp',
  'src/lalr/ParserUserData.ipp',
  'src/lalr/PositionIterator.hpp',
  'src/lalr/RegexAction.cpp',
  'src/lalr/RegexAction.hpp',
  'src/lalr/RegexCharacter.cpp',
  'src/lalr/RegexCharacter.hpp',
  'src/lalr/RegexCompiler.cpp',
  'src/lalr/RegexCompiler.hpp',
  'src/lalr/RegexGenerator.cpp',
  'src/lalr/RegexGenerator.hpp',
  'src/lalr/RegexItem.cpp',
  'src/lalr/RegexItem.hpp',
  'src/lalr/RegexNode.cpp',
  'src/lalr/RegexNode.hpp',
  'src/lalr/RegexNodeLess.cpp',
  'src/lalr/RegexNodeLess.hpp',
  'src/lalr/RegexNodeType.hpp',
  'src/lalr/RegexParser.cpp',
  'src/lalr/RegexParser.hpp',
  'src/lalr/RegexState.cpp',
  'src/lalr/RegexState.hpp',
  'src/lalr/RegexStateLess.cpp',
  'src/lalr/RegexStateLess.hpp',
  'src/lalr/RegexSyntaxTree.cpp',
  'src/lalr/RegexSyntaxTree.hpp',
  'src/lalr/RegexToken.cpp',
  'src/lalr/RegexToken.hpp',
  'src/lalr/RegexTokenType.hpp',
  'src/lalr/RegexTransition.cpp',
  'src/lalr/RegexTransition.hpp',
  'src/lalr/string_literal.hpp',
  'src/lalr/SymbolType.hpp',
  'src/lalr/ThreadPool.cpp',
  'src/lalr/ThreadPool.hpp',
  'src/lalr/TransitionType.hpp',
]

lalrc_souces = [
  'src/lalr/lalrc/dot.hpp',
  'src/lalr/lalrc/dot.cpp',
  'src/lalr/lalrc/lalrc.cpp'
]

lib_lalr_include_directories = [
  'src',
]

lib_lalr_compile_args = []

lib_lalr = static_library('lalr', 
                  sources: lib_lalr_sources,
                  c_args: lib_lalr_compile_args,
                  cpp_args: lib_lalr_compile_args
                  )

lib_lalr_dep = declare_dependency(
  include_directories: lib_lalr_include_directories,
  dependencies: grlx_ext_deps,
  link_with : lib_lalr,
  compile_args: lib_lalr_compile_args  
)

lalrc_exec = executable('lalrc', 
            sources: lalrc_souces,
            c_args: lib_lalr_compile_args,
            cpp_args: lib_lalr_compile_args,
            dependencies: [ lib_lalr_dep ]
            )

lalrc = generator( lalrc_exec,
            output: '@PLAINNAME@.cpp',
            arguments : ['-o', '@OUTPUT@', '@INPUT@']
      )

